#!/bin/bash

cd "$(dirname "$0")/../"
pth="$PWD/System"

if [[ -z "$(which shc)" ]]; then
	echo "ERROR: SHC not installed!"
	exit 1
fi

if [[ ! "$1" == "nocompile" ]]; then
	echo "Sync start."
	rm -rf "$PWD/System"
	mkdir -p "$PWD/System"
	cp -r "$PWD/Sources/" "$PWD/System/"
	rm -rf "$PWD/System/.git" 2>/dev/null
	rm -rf "$PWD/System/.gitattributes" 2>/dev/null
	rm -rf "$PWD/System/.gitignore" 2>/dev/null
	rm -rf "$PWD/System/README.md" 2>/dev/null
	rm -rf "$PWD/System/compileandrun" 2>/dev/null
	rm -rf "$PWD/System/latest" 2>/dev/null
	rm -rf "$PWD/System/prepscript.sh" 2>/dev/null
	echo "Sync done."

	# .sh
	LIST=$(find "$pth" -name *.sh -depth)
	echo "$LIST" | while read line
	do
		cd "$(dirname "$line")"
		echo "PROCESSING: $line"
		shc -r -f "$line" 2>/dev/null
		echo "BUILDING: $line"
		gcc "$line.x.c" -o "$line"
		name=$(echo "$line" | cut -f 1 -d '.')
		mv "$name.sh" "$name" 2>/dev/null
	done
	echo "Removing .sh.x.c files."
	find "$pth" -name *.sh.x.c -depth -exec rm {} \;



	# .proapp
	LIST=$(find "$pth" -name *.sh -depth)
	echo "$LIST" | while read line
	do
		name=$(echo "$line" | cut -f 1 -d '.')
		name2=$(echo "$line" | cut -f 2 -d '.')
		echo "NAME2: ${name2}"
		echo "Renaming ProApp executive: $name"
		chmod +x "$name.${name2}.sh" 2>/dev/null
		mv "$name.${name2}.sh" "$name.${name2}" 2>/dev/null
		echo "Updating resources as executable..."
		find "$name.proapp" -name *.sh -depth -exec chmod +x {} \;
		find "$name.proapp" -name *.sh.x -depth -exec rm {} \;
	done
	echo "Removing .x.c files."
	find "$pth" -name *.x.c -depth -exec rm {} \;
	echo "Build complete."
elif [[ "$1" == "norun" ]]; then
	exit 0
elif [[ "$1" == "pkg" ]]; then
	zip -rq "image.zip" . -x ".*" -x "__MACOSX"
	exit 0
fi
"$PWD/System/Boot/x64" "$@"